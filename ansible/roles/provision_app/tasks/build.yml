# register real app home directory as a fact
- user:
    name: "{{ app.user }}"
  register: app_user_info
- set_fact:
    app_user_home: "{{ app_user_info.home }}"

- include_role: name=app_config


- block:

  - name: Clone project source repo
    git: repo={{ app.repo }} dest="/qvain/qvain-api" version={{ app.branch }}
    become_user: "{{ app.user }}"

  - name: Make GOPATH directory structure and create link to repo
    block:
      - file: path={{ app.base }}/go state=directory owner={{ app.user }} group={{ app.user }} mode=0755
      - file: path={{ app.base }}/go/src/github.com state=directory owner={{ app.user }} group={{ app.user }} mode=0755
      - file: path={{ app.base }}/go/src/github.com/NatLibFi state=directory owner={{ app.user }} group={{ app.user }} mode=0755
      - file: src="/qvain/qvain-api" dest={{ app.base }}/go/src/github.com/NatLibFi/qvain-api state=link owner={{ app.user }} group={{ app.user }}
      - file: src="/qvain/qvain-api" dest={{ app.source }} state=link owner={{ app.user }} group={{ app.user }} mode=0755
    become_user: "{{ app.user }}"

  when: deployment_environment_id == 'local_development'


- block:

  - name: Make GOPATH directory structure and create link to repo
    block:
      - file: path={{ app.base }}/go state=directory owner={{ app.user }} group={{ app.user }} mode=0755
      - file: path={{ app.base }}/go/src/{{ app.import_path }} state=directory owner={{ app.user }} group={{ app.user }} mode=0755
      - file: src={{ app.base }}/go/src/{{ app.import_path }} dest={{ app.source }} state=link owner={{ app.user }} group={{ app.user }} mode=0755
    become_user: "{{ app.user }}"

  - name: Clone project source repo
    git: repo={{ app.repo }} dest={{ app.base }}/go/src/{{ app.import_path }} version={{ app.branch }}
    become_user: "{{ app.user }}"

  when: deployment_environment_id != 'local_development'


# - name: checkpoint
#   debug:
#     msg: checkpoint


- block:

  - name: Clone project web repo
    git: repo={{ app.webrepo }} dest="/qvain/qvain-js" version={{ app.branch }}
    become_user: "{{ app.user }}"
    when: app.webrepo is defined

  - name: Link shared qvain-js to {{ app.webpath }}
    file: src="/qvain/qvain-js" dest={{ app.webpath }} state=link

  when: deployment_environment_id == 'local_development'

- name: Clone project web repo
  git: repo={{ app.webrepo }} dest={{ app.webpath }} version={{ app.branch }}
  become_user: "{{ app.user }}"
  when: app.webrepo is defined
  when: deployment_environment_id != 'local_development'

- name: Check if we can find the schema in our source code repo
  stat:
    path: "{{ app.source }}/{{ app.sqlschema }}"
  register: sqlschema_file

- include: create_db_schema.yml
  when: sqlschema_file.stat.exists
- fail:
    msg: "Uhoh! Database schema file not found in {{ app.source }}/{{ app.sqlschema }}"
  when: not sqlschema_file.stat.exists

- local_action: stat path={{ role_path }}/templates/{{ app.name }}.service
  become: no
  register: service_file

# install the systemd service file BEFORE the build process, which will try to restart the backend process
- block:
  - name: Copy systemd service file
    template: src=templates/{{ app.name }}.service dest=/etc/systemd/system/{{ app.name }}.service owner=root group=root mode=644
    vars:
      homedir: "{{ app_user_info.home | default('/home/' + app.user) }}"
  - name: Enable app backend service
    #systemd: name={{ app.name }}.service enabled=yes state=restarted daemon_reload=yes
    systemd: name={{ app.name }}.service enabled=yes daemon_reload=yes
  when: service_file.stat.exists

# - name: Remove bench directory
#   file:
#     state: absent
#     # path: /srv/qvain/go/src/github.com/NatLibFi/qvain-api/internal/bench
#     path: /qvain/qvain-api/internal/bench

- name: Import dependencies
  command: go get -v -d {{ app.import_path }}/...
  environment:
    GOPATH: "{{ app.base }}/go"
    GOBIN: "{{ app.base }}/go/bin"
  become_user: "{{ app.user }}"

# this is a separate step because we install this binary (no -d argument)
- name: Import build dependencies
  command: go get -v github.com/wvh/sourcelink
  environment:
    GOPATH: "{{ app.base }}/go"
    GOBIN: "{{ app.base }}/go/bin"
  become_user: "{{ app.user }}"

- include_role: name=build_app

# That's all folks!
- debug:
    msg: "Local dev environment successfully set up."
  when: deployment_environment_id == 'local_development'

- debug:
    msg: "{{ deployment_environment_id }} environment successfully set up."
  when: deployment_environment_id != 'local_development'
